{"version":3,"sources":["components/app.module.css","components/alertError/alertError.module.css","components/filter/filter.module.css","components/contactForm/contactForm.module.css","redux/contacts/constantsTypes.js","redux/contacts/contactsActions.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactListItem.js","components/contactList/ContactList.js","components/alertError/AlertError.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/contactList/contactList.module.css"],"names":["module","exports","addToContacts","contact","type","constantsTypes","payload","id","uuidv4","removeContact","getFilterValue","filter","toggleAlert","ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","dublicate","props","onAlert","setTimeout","onAddContact","reset","items","some","item","toLowerCase","this","onSubmit","className","styles","form","label","onChange","input","btnAddContant","Component","mapDispatchToProps","contactsActions","connect","contacts","wrapperFilter","stylesFromForm","onRemoveContact","find","contactListItem","contactWrapper","onClick","btnDelete","includes","TransitionGroup","contactList","component","map","CSSTransition","key","timeout","classNames","AlertError","alert","message","wrapper","wrapperTitleWithAlert","in","appear","unmountOnExit","title","combineReducers","action","rootReducer","contactsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b00f5d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"app_appear__rEE-g\",\"appearActive\":\"app_appearActive__8ZWWK\",\"wrapper\":\"app_wrapper__3Cb3s\",\"title\":\"app_title__15isu\",\"titleEmpty\":\"app_titleEmpty__-VxPf app_title__15isu\",\"wrapperTitleWithAlert\":\"app_wrapperTitleWithAlert__1LwQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertError_enter__1vfOj\",\"enterActive\":\"alertError_enterActive__3Q65h\",\"exit\":\"alertError_exit__1VSHp\",\"exitActive\":\"alertError_exitActive__2NP-a\",\"alert\":\"alertError_alert__1tjKD\",\"message\":\"alertError_message__2h_H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperFilter\":\"filter_wrapperFilter__2eCkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__YedcG\",\"label\":\"contactForm_label__1lxmi\",\"input\":\"contactForm_input__2KXel\",\"btnAddContant\":\"contactForm_btnAddContant__3p1gZ\"};","const ADD = \"-=contacts/add=-\";\nconst REMOVE = \"-=contacts/remove=-\";\nconst FILTER_VALUE = \"-=contacts/getFilterValue=-\";\nconst EXIST_CONTACT = \"-=contacts/existContact=-\";\n\nexport default {\n  ADD,\n  REMOVE,\n  FILTER_VALUE,\n  EXIST_CONTACT,\n};\n","import constantsTypes from \"./constantsTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addToContacts = (contact) => ({\n  type: constantsTypes.ADD,\n  payload: { ...contact, id: uuidv4() },\n});\n\nconst removeContact = (id) => ({\n  type: constantsTypes.REMOVE,\n  payload: {\n    id,\n  },\n});\n\nconst getFilterValue = (filter) => ({\n  type: constantsTypes.FILTER_VALUE,\n  payload: {\n    filter,\n  },\n});\n\nconst toggleAlert = () => ({\n  type: constantsTypes.EXIST_CONTACT,\n});\n\nexport default {\n  addToContacts,\n  removeContact,\n  getFilterValue,\n  toggleAlert,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport styles from \"./contactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.dublicate()) {\n      this.props.onAlert();\n      setTimeout(() => {\n        this.props.onAlert();\n      }, 1000);\n    } else {\n      this.props.onAddContact({ ...this.state });\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  dublicate = () => {\n    return this.props.items.some(\n      (item) => item.name.toLowerCase() === this.state.name.toLowerCase()\n    );\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleInputChange}\n              className={styles.input}\n            />\n          </label>\n          <label className={styles.label}>\n            Number:\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleInputChange}\n              className={styles.input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.btnAddContant}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.contacts.items,\n  };\n};\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addToContacts,\n  onAlert: contactsActions.toggleAlert,\n};\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onAddContact: (contact) => {\n//       dispatch(contactsActions.addToContacts(contact));\n//     },\n//   };\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"./filter.module.css\";\nimport stylesFromForm from \"../contactForm/contactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nfunction Filter({ getFilterValue, filter }) {\n  return (\n    <div className={styles.wrapperFilter}>\n      <label className={stylesFromForm.label}>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={(e) => {\n            getFilterValue(e.target.value);\n          }}\n          value={filter}\n          className={stylesFromForm.input}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { state: state.contacts.filter };\n};\nconst mapDispatchToProps = {\n  getFilterValue: contactsActions.getFilterValue,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport styles from \"./contactList.module.css\";\n\nfunction ContactListItem({ name, number, id, onRemoveContact }) {\n  return (\n    <li className={styles.contactListItem}>\n      <div className={styles.contactWrapper}>\n        <span>{name}:</span>\n        <span>{number}</span>\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          onRemoveContact(id);\n        }}\n        className={styles.btnDelete}\n      >\n        &#10060;\n      </button>\n    </li>\n  );\n}\n\nconst mapStateToProps = (state, { id }) => {\n  return {\n    contact: state.contacts.items.find((item) => item.id === id),\n  };\n};\n\nconst mapDispatchToProps = {\n  onRemoveContact: contactsActions.removeContact,\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onRemoveContact: (id) => {\n//       dispatch(contactsActions.removeContact(id));\n//     },\n//   };\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport styles from \"./contactList.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport ContactListItem from \"./ContactListItem\";\n\nfunction ContactList({ items = [] }) {\n  return (\n    <TransitionGroup className={styles.contactList} component=\"ul\">\n      {items.map((item) => (\n        <CSSTransition\n          key={item.id}\n          id={item.id}\n          timeout={500}\n          classNames={styles}\n          // unmountOnExit\n        >\n          <ContactListItem\n            key={item.id}\n            name={item.name}\n            number={item.number}\n            id={item.id}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.contacts.items.filter((item) =>\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n    ),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport styles from \"./alertError.module.css\";\n// import { CSSTransition } from \"react-transition-group\";\n\nfunction AlertError() {\n  return (\n    // <CSSTransition classNames={styles} in={alert} timeout={250} unmountOnExit>\n    <div className={styles.alert}>\n      <span className={styles.message}>Contact already exists!</span>\n    </div>\n    // </CSSTransition>\n  );\n}\n\nexport default AlertError;\n","import React from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport Filter from \"./filter/Filter\";\nimport ContactList from \"./contactList/ContactList\";\nimport styles from \"./app.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport AlertError from \"./alertError/AlertError\";\nimport { connect } from \"react-redux\";\n\nfunction App({ alert }) {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.wrapperTitleWithAlert}>\n        <CSSTransition\n          classNames={styles}\n          in={true}\n          appear={true}\n          timeout={500}\n          unmountOnExit\n        >\n          <h1 className={styles.title}>Phonebook</h1>\n        </CSSTransition>\n        {alert && <AlertError />}\n      </div>\n      <ContactForm />\n      {/* {contacts.length > 0 ? (\n        <div>\n          {contacts.length > 1 && ( */}\n      <Filter />\n      {/* )} */}\n\n      <ContactList />\n      {/* </div>\n      ) : (\n        <h2 className={styles.titleEmpty}>\n          Your phonebook is empty, please add your first contact\n        </h2>\n      )} */}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    alert: state.contacts.alert,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport constantsTypes from \"./constantsTypes\";\n\nconst itemsReduser = (state = [], action) => {\n  switch (action.type) {\n    case constantsTypes.ADD:\n      return [...state, action.payload];\n\n    case constantsTypes.REMOVE:\n      return state.filter((item) => item.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReduser = (state = \"\", action) => {\n  switch (action.type) {\n    case constantsTypes.FILTER_VALUE:\n      return action.payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nconst alertReducer = (state = false, action) => {\n  switch (action.type) {\n    case constantsTypes.EXIST_CONTACT:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: itemsReduser,\n  filter: filterReduser,\n  alert: alertReducer,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__2heqK\",\"enterActive\":\"contactList_enterActive__n-FF2\",\"exit\":\"contactList_exit__3MCbb\",\"exitActive\":\"contactList_exitActive__2ZRse\",\"contactListItem\":\"contactList_contactListItem__3WoKj\",\"contactWrapper\":\"contactList_contactWrapper__ULGKW\",\"btnDelete\":\"contactList_btnDelete__3gGIn\"};"],"sourceRoot":""}